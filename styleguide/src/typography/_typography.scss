  $font-fallback: "Helvetica", "Arial", sans-serif;
  @mixin font-family($font-family: "AntiqueLegacy") {
    font-family: #{$font-family}, #{$font-fallback};
    color: $global-text-color
  }

  html,
  body {
    @include font-family($ff);
  }
  
  // din() - a utility for applying din without buying into the heading system - used for hacks
  @mixin din($weight:'') {
    @include font-family($ff);
    @if($weight != ''){
      font-weight:$weight;
    }
  }

  // mini-reset for headings. previously, this was in the header mix-in itself,
  // but it seemed likelty to interfere with the cascade, so moving it out:
  h1,h2,h3,h4,h5,h6,p {
    padding: 0; margin: 0
  }

  // font()
  // apply font size, line-height and an optional weight to selector
  @mixin font($font-size, $line-height, $weight:'', $letter-spacing:'normal'){
    font-size:$font-size * 1px;
    line-height:$line-height * 1px;
    letter-spacing: unquote($letter-spacing);

    @if($weight != ''){
      font-weight:$weight;
    }
  }

  // set up a double-stranded hierarchy for headers
  // http://csswizardry.com/2012/02/pragmatic-practical-font-sizing-in-css/
  //
  // currently, the h1-h6 are not styled without the presence of a .header classname, so you have to opt-in to the system
  // this seems a little overly complicated but does allow for the styleguide's navigation etc to be unaffected
  // I would prefer to use map-get for each property but nested maps were giving me an issue...
  // ------------------------------------------------------------------------------------------------------------------------------
  // name      heading      font-size   line-height   font-size (m)  line-height (m)  weight    letter spacing     font-face
  // ------------------------------------------------------------------------------------------------------------------------------
  $header_map: (
    'alpha':   ('h1',       50,         48,           34,             32,             400,       'normal',         'Atyp'),
    'beta':    ('h2',       30,         30,           24,             24,             300,       '-0.005em',       'Atyp'),
    'theta':   ('h3',       24,         26,           18,             20,             400,       '-0.005em',       'Atyp'),
    'eta':     ('h4',       14,         18,           14,             18,             600,       '0.15em',         'Atyp'),
    'gamma':   ('h3',       24,         26,           18,             22,             400,       'normal',         'AntiqueLegacy'),
    'delta':   ('h4',       20,         24,           16,             20,             400,       'normal',         'AntiqueLegacy'),
    'epsilon': ('h5',       16,         22,           14,             18,             400,       'normal',         'AntiqueLegacy'),
    'zeta':    ('h6',       12,         16,           12,             16,             400,       'normal',         'AntiqueLegacy')
  );

  @mixin header($key) {
    @if(map-has-key($header_map, $key)){
      $heading :            map-get($header_map, $key);
      $font-size:           nth($heading, 2);
      $line-height:         nth($heading, 3);
      $font-size-mobile:    nth($heading, 4);
      $line-height-mobile:  nth($heading, 5);
      $weight:              nth($heading, 6);
      $letter-spacing:      nth($heading, 7);
      $ff:                  nth($heading, 8);

      @include font-family($ff);
      @include font($font-size-mobile, $line-height-mobile, $weight, $letter-spacing);
      @include from-large {
        @include font($font-size, $line-height, $weight, $letter-spacing);
      }
    }
    @else {
      @warn "key `#{$key}` doesn't exist in header_map";
    }
  }

  h1.header,
  .header--alpha {
    @include header('alpha');
  }

  h2.header,
  .header--beta {
    @include header('beta');
  }

  //h3.header,
  .header--theta {
    @include header('theta');
  }

  //h4.header,
  .header--eta {
    @include header('eta');
  }

  //h3.header,
  .header--gamma {
    @include header('gamma');
  }

  //h4.header,
  .header--delta {
    @include header('delta');
  }

  h5.header,
  .header--epsilon {
    @include header('epsilon');
  }

  h6.header,
  .header--zeta {
    @include header('zeta');
  }


  // legacy - having a mixin for each header weight doesn't make a lot of sense,
  // but this is here to help with the transition away from @extends
  @mixin header--alpha {
    @include header('alpha');
  }

  @mixin header--beta {
    @include header('beta');
  }

  @mixin header--theta {
    @include header('theta');
  }

  @mixin header--eta {
    @include header('eta');
  }

  @mixin header--gamma {
    @include header('gamma');
  }

  @mixin header--delta {
    @include header('delta');
  }

  @mixin header--epsilon {
    @include header('epsilon');
  }

  @mixin header--zeta {
    @include header('zeta');
  }

  @mixin header-medium-weight {
    font-weight: 600;
  }

  @mixin header-regular-weight {
    font-weight: 400 !important;
  }


  //
  // body-text and misc helpers
  // ---------------------------------------------------------------------------------------
  @mixin body-text {
    @include font-family($ff);
    @include header--epsilon;
  }

  .body-text {
    @include body-text;
  }

  .legal {
    @include header--zeta;
  }

  // utils
  @mixin upcase {
    text-transform: uppercase;
  }

  .caps,
  .upcase {
    @include upcase;
  }

  @mixin downcase {
    text-transform: lowercase;
  }

  .downcase {
    @include downcase;
  }

  @mixin smallcaps {
    @include upcase;
    @include header--eta;
  }

  .smallcaps {
    @include smallcaps;
  }

  @mixin italic {
    font-style: italic;
  }

  .italic {
    @include italic;
  }

  @mixin underline {
    text-decoration: underline;
  }

  .underline {
    @include underline;
  }

  @mixin capitalize {
    text-transform: capitalize;
  }

  .capitalize {
    @include capitalize;
  }
